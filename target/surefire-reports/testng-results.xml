<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-02T08:05:14 IST" name="Suite" finished-at="2024-04-02T08:06:15 IST" duration-ms="60691">
    <groups>
      <group name="Regression">
        <method signature="PetTests.Pet_Delete()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Delete" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Delete_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Delete_Error" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Get()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Get" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Get_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Get_Error" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Get_Status()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Get_Status" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post_Error" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post_Image()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post_Image" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post_Update()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post_Update" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Put()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Put" class="apiTests.PetTests"/>
      </group> <!-- Regression -->
      <group name="Smoke">
        <method signature="PetTests.Pet_Get()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Get" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post_Image()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post_Image" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Put()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Put" class="apiTests.PetTests"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-04-02T08:05:14 IST" name="Test" finished-at="2024-04-02T08:06:15 IST" duration-ms="60691">
      <class name="apiTests.PetTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:14 IST" name="setUp" finished-at="2024-04-02T08:05:14 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:14 IST" name="setUpTest" finished-at="2024-04-02T08:05:14 IST" duration-ms="561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:15 IST" name="setUp" finished-at="2024-04-02T08:05:15 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Delete()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:15 IST" name="Pet_Delete" finished-at="2024-04-02T08:05:22 IST" duration-ms="7605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Delete -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:22 IST" name="cleanUp" finished-at="2024-04-02T08:05:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Delete status=SUCCESS method=PetTests.Pet_Delete()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:22 IST" name="setUp" finished-at="2024-04-02T08:05:22 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Delete_Error()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Delete_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:22 IST" name="Pet_Delete_Error" finished-at="2024-04-02T08:05:24 IST" duration-ms="1507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Delete_Error -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:24 IST" name="cleanUp" finished-at="2024-04-02T08:05:24 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Delete_Error status=SUCCESS method=PetTests.Pet_Delete_Error()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:24 IST" name="setUp" finished-at="2024-04-02T08:05:24 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Get()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Get()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:24 IST" name="Pet_Get" finished-at="2024-04-02T08:05:27 IST" duration-ms="3075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Get -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:27 IST" name="cleanUp" finished-at="2024-04-02T08:05:28 IST" duration-ms="1523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Get status=SUCCESS method=PetTests.Pet_Get()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:28 IST" name="setUp" finished-at="2024-04-02T08:05:28 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Get_Error()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Get_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:28 IST" name="Pet_Get_Error" finished-at="2024-04-02T08:05:30 IST" duration-ms="1535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Get_Error -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:30 IST" name="cleanUp" finished-at="2024-04-02T08:05:31 IST" duration-ms="1529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Get_Error status=SUCCESS method=PetTests.Pet_Get_Error()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:31 IST" name="setUp" finished-at="2024-04-02T08:05:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Get_Status()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Get_Status()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:31 IST" name="Pet_Get_Status" finished-at="2024-04-02T08:05:38 IST" duration-ms="7041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Get_Status -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:38 IST" name="cleanUp" finished-at="2024-04-02T08:05:40 IST" duration-ms="1444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Get_Status status=SUCCESS method=PetTests.Pet_Get_Status()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:40 IST" name="setUp" finished-at="2024-04-02T08:05:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Post()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Post()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:40 IST" name="Pet_Post" finished-at="2024-04-02T08:05:41 IST" duration-ms="1541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Post -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:41 IST" name="cleanUp" finished-at="2024-04-02T08:05:44 IST" duration-ms="3068" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Post status=SUCCESS method=PetTests.Pet_Post()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:44 IST" name="setUp" finished-at="2024-04-02T08:05:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Post_Error()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Post_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:44 IST" name="Pet_Post_Error" finished-at="2024-04-02T08:05:46 IST" duration-ms="1538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Post_Error -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:46 IST" name="cleanUp" finished-at="2024-04-02T08:05:49 IST" duration-ms="2710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Post_Error status=SUCCESS method=PetTests.Pet_Post_Error()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:49 IST" name="setUp" finished-at="2024-04-02T08:05:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Post_Image() throws java.io.FileNotFoundException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Post_Image()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:49 IST" name="Pet_Post_Image" finished-at="2024-04-02T08:05:53 IST" duration-ms="3872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Post_Image -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:53 IST" name="cleanUp" finished-at="2024-04-02T08:05:57 IST" duration-ms="4185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Post_Image status=SUCCESS method=PetTests.Pet_Post_Image()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:57 IST" name="setUp" finished-at="2024-04-02T08:05:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Post_Update()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Post_Update()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:05:57 IST" name="Pet_Post_Update" finished-at="2024-04-02T08:06:02 IST" duration-ms="4993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Post_Update -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:06:02 IST" name="cleanUp" finished-at="2024-04-02T08:06:06 IST" duration-ms="4598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Post_Update status=SUCCESS method=PetTests.Pet_Post_Update()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:06:06 IST" name="setUp" finished-at="2024-04-02T08:06:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@68a5aadd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Put()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Put()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:06:06 IST" name="Pet_Put" finished-at="2024-04-02T08:06:09 IST" duration-ms="2893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Put -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:06:09 IST" name="cleanUp" finished-at="2024-04-02T08:06:14 IST" duration-ms="4474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Put status=SUCCESS method=PetTests.Pet_Put()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUpTest()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-02T08:06:14 IST" name="cleanUpTest" finished-at="2024-04-02T08:06:15 IST" duration-ms="837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUpTest -->
      </class> <!-- apiTests.PetTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
