<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-01T18:56:46 IST" name="Suite" finished-at="2024-04-01T18:57:44 IST" duration-ms="58957">
    <groups>
      <group name="Regression">
        <method signature="PetTests.Pet_Delete()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Delete" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Delete_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Delete_Error" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Get()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Get" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Get_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Get_Error" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Get_Status()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Get_Status" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post_Error" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post_Image()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post_Image" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post_Update()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post_Update" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Put()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Put" class="apiTests.PetTests"/>
      </group> <!-- Regression -->
      <group name="Smoke">
        <method signature="PetTests.Pet_Get()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Get" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Post_Image()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Post_Image" class="apiTests.PetTests"/>
        <method signature="PetTests.Pet_Put()[pri:0, instance:apiTests.PetTests@64cd705f]" name="Pet_Put" class="apiTests.PetTests"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-04-01T18:56:46 IST" name="Test" finished-at="2024-04-01T18:57:44 IST" duration-ms="58957">
      <class name="apiTests.PetTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:46 IST" name="setUp" finished-at="2024-04-01T18:56:46 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:46 IST" name="setUpTest" finished-at="2024-04-01T18:56:46 IST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:46 IST" name="setUp" finished-at="2024-04-01T18:56:46 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Delete()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:46 IST" name="Pet_Delete" finished-at="2024-04-01T18:56:51 IST" duration-ms="5543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Delete -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:51 IST" name="cleanUp" finished-at="2024-04-01T18:56:51 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Delete status=SUCCESS method=PetTests.Pet_Delete()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:51 IST" name="setUp" finished-at="2024-04-01T18:56:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Delete_Error()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Delete_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:51 IST" name="Pet_Delete_Error" finished-at="2024-04-01T18:56:53 IST" duration-ms="1602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Delete_Error -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:53 IST" name="cleanUp" finished-at="2024-04-01T18:56:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Delete_Error status=SUCCESS method=PetTests.Pet_Delete_Error()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:53 IST" name="setUp" finished-at="2024-04-01T18:56:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Get()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Get()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:53 IST" name="Pet_Get" finished-at="2024-04-01T18:56:56 IST" duration-ms="3180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Get -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:56 IST" name="cleanUp" finished-at="2024-04-01T18:56:58 IST" duration-ms="1452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Get status=SUCCESS method=PetTests.Pet_Get()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:58 IST" name="setUp" finished-at="2024-04-01T18:56:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Get_Error()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Get_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:58 IST" name="Pet_Get_Error" finished-at="2024-04-01T18:56:59 IST" duration-ms="1358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Get_Error -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:56:59 IST" name="cleanUp" finished-at="2024-04-01T18:57:01 IST" duration-ms="1579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Get_Error status=SUCCESS method=PetTests.Pet_Get_Error()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="Pet_Get_Status()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:01 IST" name="Pet_Get_Status" finished-at="2024-04-01T18:57:09 IST" duration-ms="8468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Get_Status -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:01 IST" name="setUp" finished-at="2024-04-01T18:57:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Get_Status()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:09 IST" name="cleanUp" finished-at="2024-04-01T18:57:11 IST" duration-ms="1459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Get_Status status=SUCCESS method=PetTests.Pet_Get_Status()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:11 IST" name="setUp" finished-at="2024-04-01T18:57:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Post()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Post()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:11 IST" name="Pet_Post" finished-at="2024-04-01T18:57:12 IST" duration-ms="1537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Post -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:12 IST" name="cleanUp" finished-at="2024-04-01T18:57:15 IST" duration-ms="2977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Post status=SUCCESS method=PetTests.Pet_Post()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="Pet_Post_Error()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:15 IST" name="Pet_Post_Error" finished-at="2024-04-01T18:57:16 IST" duration-ms="1428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Post_Error -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:15 IST" name="setUp" finished-at="2024-04-01T18:57:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Post_Error()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:16 IST" name="cleanUp" finished-at="2024-04-01T18:57:19 IST" duration-ms="2775" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Post_Error status=SUCCESS method=PetTests.Pet_Post_Error()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:19 IST" name="setUp" finished-at="2024-04-01T18:57:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Post_Image() throws java.io.FileNotFoundException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Post_Image()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:19 IST" name="Pet_Post_Image" finished-at="2024-04-01T18:57:24 IST" duration-ms="4386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Post_Image -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:24 IST" name="cleanUp" finished-at="2024-04-01T18:57:28 IST" duration-ms="4195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Post_Image status=SUCCESS method=PetTests.Pet_Post_Image()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:28 IST" name="setUp" finished-at="2024-04-01T18:57:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Post_Update()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Post_Update()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:28 IST" name="Pet_Post_Update" finished-at="2024-04-01T18:57:32 IST" duration-ms="4200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Post_Update -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:32 IST" name="cleanUp" finished-at="2024-04-01T18:57:36 IST" duration-ms="4327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Post_Update status=SUCCESS method=PetTests.Pet_Post_Update()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext,java.lang.reflect.Method)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:36 IST" name="setUp" finished-at="2024-04-01T18:57:36 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@b0d3e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void apiTests.PetTests.Pet_Put()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Pet_Put()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:36 IST" name="Pet_Put" finished-at="2024-04-01T18:57:39 IST" duration-ms="3043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pet_Put -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:39 IST" name="cleanUp" finished-at="2024-04-01T18:57:44 IST" duration-ms="4395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Pet_Put status=SUCCESS method=PetTests.Pet_Put()[pri:0, instance:apiTests.PetTests@64cd705f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUpTest()[pri:0, instance:apiTests.PetTests@64cd705f]" started-at="2024-04-01T18:57:44 IST" name="cleanUpTest" finished-at="2024-04-01T18:57:44 IST" duration-ms="692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUpTest -->
      </class> <!-- apiTests.PetTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
